version: '3'

name: ${STACK_NAME}

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  mongo_data:


services:
  nginx:
    image: ${PROXY_NAME}:${APP_VERSION}
    container_name: nginx_proxy
    build:
      context: .
      dockerfile: dockerfiles/proxy.Dockerfile
      no_cache: true
    depends_on:
      - service
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      - nginx_network
    restart: always

  service:
    image: ${IMAGE_NAME}:${APP_VERSION}
    container_name: ${CONTAINER_NAME}
    build:
      context: .
      dockerfile: dockerfiles/service.Dockerfile
      no_cache: true
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 600M
        reservations:
          cpus: '0.1'
          memory: 300M
    expose:
      - ${INTERNAL_PORT}
    environment:
      APP_VERSION: ${APP_VERSION}
      INTERNAL_PORT: ${INTERNAL_PORT}
    networks:
      - nginx_network
      - db_network
    restart: always

  mongo_db:
    image: mongo
    container_name: mongo_db
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_LOGIN}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PW}
    volumes:
      - mongo_data:/data/db
    networks:
      - db_network
    restart: always

  redis:
    image: redis
    container_name: redis_container
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      REDIS_USERNAME: ${REDIS_LOGIN}
      REDIS_PASSWORD: ${REDIS_PW}
    networks:
      - db_network
    restart: always
